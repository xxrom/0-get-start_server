{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/datasources/launch.js","webpack:///./src/datasources/user.js","webpack:///./src/index.js","webpack:///./src/resolvers/index.js","webpack:///./src/schema.js","webpack:///./src/utils.js","webpack:///external \"apollo-datasource\"","webpack:///external \"apollo-datasource-rest\"","webpack:///external \"apollo-server\"","webpack:///external \"isemail\"","webpack:///external \"sequelize\""],"names":["LaunchAPI","RESTDataSource","constructor","baseURL","getAllLaunches","response","get","Array","isArray","map","launch","launchReducer","id","flight_number","cursor","launch_date_unix","site","launch_site","site_name","mission","name","mission_name","missionPatchSmall","links","mission_patch_small","missionPatchLarge","mission_patch","rocket","rocket_id","rocket_name","type","rocket_type","getLaunchById","launchId","getLaunchesByIds","launchIds","Promise","all","UserAPI","DataSource","store","console","log","initialize","config","context","findOrCreateUser","email","emailArg","user","isEmail","validate","users","findOrCreate","where","bookTrips","userId","results","res","bookTrip","push","trips","length","cancelTrip","destroy","getLaunchIdsByUser","found","findAll","l","dataValues","filter","isBookedOnLaunch","createStore","server","ApolloServer","typeDefs","resolvers","dataSources","launchAPI","userAPI","req","auth","headers","authorization","Buffer","from","toString","listen","then","url","books","title","author","Query","launches","_","pageSize","after","allLaunches","reverse","paginateResults","hasMore","launchesById","me","__","Mutation","login","success","message","includes","result","Mission","missionPatch","size","Launch","isBooked","User","gql","getCursor","slice","cursorIndex","findIndex","item","itemCursor","Math","min","Op","SQL","operatorsAliases","$in","in","db","dialect","storage","logging","define","INTEGER","primaryKey","autoIncrement","createdAt","DATE","updatedAt","STRING","token"],"mappings":"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","file":"main.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","import { RESTDataSource } from \"apollo-datasource-rest\";\n\nclass LaunchAPI extends RESTDataSource {\n  constructor() {\n    super();\n    this.baseURL = \"https://api.spacexdata.com/v2/\";\n  }\n\n  /* // without pagination\n  query GetLaunchByIds {\n    launches {\n      id\n      site\n      mission {\n        name\n      }\n      rocket {\n        name\n      }\n    }\n  }\n  */\n  /* // with pagination\n    query GetLaunchesPagination {\n      launches (pageSize: 3\n        //, after: \"1561433400\" // optional parameter\n        ) {\n        cursor\n        hasMore\n        launches {\n          id\n          mission{\n            name\n          }\n        }\n      }\n    }\n  */\n  async getAllLaunches() {\n    // Get from 'this.baseURL' + 'launches'\n    const response = await this.get(\"launches\");\n    return Array.isArray(response)\n      ? response.map(launch => this.launchReducer(launch))\n      : [];\n  }\n\n  // Convert response data from server to our graphQL schema format\n  launchReducer(launch) {\n    return {\n      id: launch.flight_number || 0,\n      cursor: `${launch.launch_date_unix}`,\n      site: launch.launch_site && launch.launch_site.site_name,\n      mission: {\n        name: launch.mission_name,\n        missionPatchSmall: launch.links.mission_patch_small,\n        missionPatchLarge: launch.links.mission_patch\n      },\n      rocket: {\n        id: launch.rocket.rocket_id,\n        name: launch.rocket.rocket_name,\n        type: launch.rocket.rocket_type\n      }\n    };\n  }\n\n  /*\n  query GetLaunchById {\n    launch(id: 60) {\n      id\n      site\n      mission {\n        name\n      }\n      rocket {\n        id\n        type\n      }\n    }\n  }\n  */\n  async getLaunchById({ launchId }) {\n    const response = await this.get(\"launches\", { flight_number: launchId });\n    return this.launchReducer(response[0]);\n  }\n\n  /*\n  query GetLaunchByIds {\n    launchesById(launchIds: [1,2,60]) {\n      id\n      site\n      mission {\n        name\n      }\n      rocket {\n        name\n      }\n    }\n  }\n  */\n  getLaunchesByIds({ launchIds }) {\n    return Promise.all(\n      launchIds.map(launchId => this.getLaunchById({ launchId }))\n    );\n  }\n}\n\nexport { LaunchAPI };\n","import { DataSource } from \"apollo-datasource\";\nimport isEmail from \"isemail\";\n\nclass UserAPI extends DataSource {\n  constructor({ store }) {\n    super();\n    this.store = store;\n    console.log(\"this.store\", this.store);\n  }\n\n  /**\n   * This is a function that gets called by ApolloServer when being setup.\n   * This function gets called with the datasource config including things\n   * like caches and context. We'll assign this.context to the request context\n   * here, so we can know about the user making requests\n   */\n  initialize(config) {\n    this.context = config.context;\n  }\n\n  /**\n   * User can be called with an argument that includes email, but it doesn't\n   * have to be. If the user is already on the context, it will use that user\n   * instead\n   */\n  async findOrCreateUser({ email: emailArg } = {}) {\n    console.log(\"findOrCreateUser\");\n    const email =\n      this.context && this.context.user ? this.context.user.email : emailArg;\n    console.log(\"findOrCreateUser\", email);\n    if (!email || !isEmail.validate(email)) return null;\n\n    console.log(\"findOrCreateUser 2\");\n    const users = await this.store.users.findOrCreate({ where: { email } });\n    console.log(\"findOrCreateUser\", users);\n    return users && users[0] ? users[0] : null;\n  }\n\n  async bookTrips({ launchIds }) {\n    const userId = this.context.user.id;\n    if (!userId) return;\n\n    let results = [];\n\n    // for each launch id, try to book the trip and add it to the results array\n    // if successful\n    for (const launchId of launchIds) {\n      const res = await this.bookTrip({ launchId });\n      if (res) results.push(res);\n    }\n\n    return results;\n  }\n\n  async bookTrip({ launchId }) {\n    const userId = this.context.user.id;\n    const res = await this.store.trips.findOrCreate({\n      where: { userId, launchId }\n    });\n    return res && res.length ? res[0].get() : false;\n  }\n\n  async cancelTrip({ launchId }) {\n    const userId = this.context.user.id;\n    return !!this.store.trips.destroy({ where: { userId, launchId } });\n  }\n\n  async getLaunchIdsByUser() {\n    const userId = this.context.user.id;\n    const found = await this.store.trips.findAll({\n      where: { userId }\n    });\n    return found && found.length\n      ? found.map(l => l.dataValues.launchId).filter(l => !!l)\n      : [];\n  }\n\n  async isBookedOnLaunch({ launchId }) {\n    if (!this.context || !this.context.user) return false;\n    const userId = this.context.user.id;\n    const found = await this.store.trips.findAll({\n      where: { userId, launchId }\n    });\n    return found && found.length > 0;\n  }\n}\n\nexport { UserAPI };\n","import { ApolloServer } from \"apollo-server\";\nimport isEmail from \"isemail\";\n\nimport { createStore } from \"./utils\";\nimport { typeDefs } from \"./schema\";\nimport { resolvers } from \"./resolvers\";\n\nimport { LaunchAPI } from \"./datasources/launch\";\nimport { UserAPI } from \"./datasources/user\";\n\nconst store = createStore();\n\n// In the most basic sense, the ApolloServer can be started\n// by passing type definitions (typeDefs) and the resolvers\n// responsible for fetching the data for those types.\nconst server = new ApolloServer({\n  typeDefs,\n  resolvers,\n  dataSources: () => ({\n    launchAPI: new LaunchAPI(),\n    userAPI: new UserAPI({ store })\n  }),\n  context: async ({ req }) => {\n    // simple auth check on every request\n    const auth = (req.headers && req.headers.authorization) || \"\";\n    const email = Buffer.from(auth, \"base64\").toString(\"ascii\");\n    // if the email isn't formatted validly, return null for user\n    if (!isEmail.validate(email)) return { user: null };\n    // find a user by their email\n    const users = await store.users.findOrCreate({ where: { email } });\n    const user = users && users[0] ? users[0] : null;\n\n    return { user: { ...user.dataValues } };\n  }\n});\n\n// This `listen` method launches a web-server.  Existing apps\n// can utilize middleware options, which we'll discuss later.\nserver.listen().then(({ url }) => {\n  console.log(`🚀  Server ready at ${url}`);\n});\n","import { paginateResults } from \"../utils\";\n\n// This is a (sample) collection of books we'll be able to query\n// the GraphQL server for.  A more complete example might fetch\n// from an existing data source like a REST API or database.\nconst books = [\n  {\n    title: \"Harry Potter and the Chamber of Secrets\",\n    author: \"J.K. Rowling\"\n  },\n  {\n    title: \"Jurassic Park\",\n    author: \"Michael Crichton\"\n  }\n];\n\n// Resolvers define the technique for fetching the types in the\n// schema.  We'll retrieve books from the \"books\" array above.\nconst resolvers = {\n  Query: {\n    // books: (_, __, { dataSources }) => dataSources.booksAPI.getAllLaunches(),\n    // books: () => books\n    // launches: (_, __, { dataSources }) =>  // Old one without pagination (which could be done)\n    //   dataSources.launchAPI.getAllLaunches(),\n    /**\n     * pageSize - размер блока с данными, after - начало отсчета?\n     * query GetLaunches {\n     * launches(pageSize: 3) {\n     *   launches {\n     *       id\n     *       mission {\n     *         name\n     *       }\n     *     }\n     *   }\n     * }\n     */\n    launches: async (_, { pageSize = 20, after }, { dataSources }) => {\n      const allLaunches = await dataSources.launchAPI.getAllLaunches();\n      // we want these in reverse chronological order\n      allLaunches.reverse();\n      const launches = paginateResults({\n        after,\n        pageSize,\n        results: allLaunches\n      });\n      return {\n        launches,\n        cursor: launches.length ? launches[launches.length - 1].cursor : null,\n        // if the cursor of the end of the paginated results is the same as the\n        // last item in _all_ results, then there are no more results after this\n        hasMore: launches.length\n          ? launches[launches.length - 1].cursor !==\n            allLaunches[allLaunches.length - 1].cursor\n          : false\n      };\n    },\n    launch: (_, { id }, { dataSources }) =>\n      dataSources.launchAPI.getLaunchById({ launchId: id }),\n    launchesById: (_, { launchIds }, { dataSources }) =>\n      dataSources.launchAPI.getLaunchesByIds({ launchIds }),\n    me: (_, __, { dataSources }) => dataSources.userAPI.findOrCreateUser()\n  },\n  Mutation: {\n    login: async (_, { email }, { dataSources }) => {\n      const user = await dataSources.userAPI.findOrCreateUser({ email });\n      if (user) return Buffer.from(email).toString(\"base64\");\n    },\n    bookTrips: async (_, { launchIds }, { dataSources }) => {\n      const results = await dataSources.userAPI.bookTrips({ launchIds });\n      const launches = await dataSources.launchAPI.getLaunchesByIds({\n        launchIds\n      });\n\n      return {\n        success: results && results.length === launchIds.length,\n        message:\n          results.length === launchIds.length\n            ? \"trips booked successfully\"\n            : `the following launches couldn't be booked: ${launchIds.filter(\n                id => !results.includes(id)\n              )}`,\n        launches\n      };\n    },\n    cancelTrip: async (_, { launchId }, { dataSources }) => {\n      const result = await dataSources.userAPI.cancelTrip({ launchId });\n\n      if (!result)\n        return {\n          success: false,\n          message: \"failed to cancel trip\"\n        };\n\n      const launch = await dataSources.launchAPI.getLaunchById({ launchId });\n      return {\n        success: true,\n        message: \"trip cancelled\",\n        launches: [launch]\n      };\n    }\n  },\n  Mission: {\n    // make sure the default size is 'large' in case user doesn't specify\n    missionPatch: (mission, { size } = { size: \"LARGE\" }) => {\n      return size === \"SMALL\"\n        ? mission.missionPatchSmall\n        : mission.missionPatchLarge;\n    }\n  },\n  // Нахрена нам нужно это ??? зачем  отдельный блок\n  Launch: {\n    isBooked: async (launch, _, { dataSources }) =>\n      dataSources.userAPI.isBookedOnLaunch({ launchId: launch.id })\n  },\n  // Нахрена нам нужно это ??? зачем  отдельный блок\n  User: {\n    trips: async (_, __, { dataSources }) => {\n      // get ids of launches by user\n      const launchIds = await dataSources.userAPI.getLaunchIdsByUser();\n\n      if (!launchIds.length) return [];\n\n      // look up those launches by their ids\n      return (\n        dataSources.launchAPI.getLaunchesByIds({\n          launchIds\n        }) || []\n      );\n    }\n  }\n};\n\nexport { resolvers };\n","import { gql } from \"apollo-server\";\n\n// Type definitions define the \"shape\" of your data and specify\n// which ways the data can be fetched from the GraphQL server.\nconst typeDefs = gql`\n  ### Apollo Tutorial (Build a schema)\n  # This \"Book\" type can be used in other type declarations.\n  type Book {\n    title: String\n    author: String\n  }\n\n  type Rocket {\n    id: ID!\n    name: String\n    type: String\n  }\n\n  type User {\n    id: ID!\n    email: String!\n    trips: [Launch]!\n  }\n\n  type Mission {\n    name: String\n    # missionPatch(size: PatchSize): String\n    missionPatch(mission: String, size: PatchSize): String\n  }\n\n  type TripUpdateResponse {\n    success: Boolean!\n    message: String\n    launches: [Launch]\n  }\n\n  enum PatchSize {\n    SMALL\n    LARGE\n  }\n\n  type Launch {\n    id: ID!\n    site: String\n    mission: Mission\n    rocket: Rocket\n    isBooked: Boolean!\n  }\n\n  \"\"\"\n  Simple wrapper around our list of launches that contains a cursor to the\n  last item in the list. Pass this cursor to the launches query to fetch results\n  after these.\n  \"\"\"\n  type LaunchConnection { # add this below the Query type as an additional type.\n    cursor: String!\n    hasMore: Boolean!\n    launches: [Launch]!\n  }\n\n  ### QUERY\n  type Query {\n    books: [Book]\n    ### ---\n    launches( # replace the current launches query with this one.\n      \"\"\"\n      The number of results to show. Must be >= 1. Default = 20\n      \"\"\"\n      pageSize: Int\n      \"\"\"\n      If you add a cursor here, it will only return results _after_ this cursor\n      Optional, get from answer in cursor string data (in launches query)\n      \"\"\"\n      after: String\n    ): LaunchConnection!\n    launch(id: ID!): Launch\n    launchesById(launchIds: [ID!]): [Launch]\n    # Queries for the current user\n    me: User\n  }\n\n  ### MUTATION\n  type Mutation {\n    # if false, booking trips failed -- check errors\n    bookTrips(launchIds: [ID]!): TripUpdateResponse!\n\n    # if false, cancellation failed -- check errors\n    cancelTrip(launchId: ID!): TripUpdateResponse!\n\n    login(email: String): String # login token\n  }\n`;\n\nexport { typeDefs };\n","import SQL from \"sequelize\";\n\nconst paginateResults = ({\n  after: cursor,\n  pageSize = 20,\n  results,\n  // can pass in a function to calculate an item's cursor\n  getCursor = () => null\n}) => {\n  if (pageSize < 1) return [];\n\n  if (!cursor) return results.slice(0, pageSize);\n  const cursorIndex = results.findIndex(item => {\n    // if an item has a `cursor` on it, use that, otherwise try to generate one\n    let itemCursor = item.cursor ? item.cursor : getCursor(item);\n\n    // if there's still not a cursor, return false by default\n    return itemCursor ? cursor === itemCursor : false;\n  });\n\n  return cursorIndex >= 0\n    ? cursorIndex === results.length - 1 // don't let us overflow\n      ? []\n      : results.slice(\n          cursorIndex + 1,\n          Math.min(results.length, cursorIndex + 1 + pageSize)\n        )\n    : results.slice(0, pageSize);\n};\n\nconst createStore = () => {\n  const Op = SQL.Op;\n  const operatorsAliases = {\n    $in: Op.in\n  };\n\n  const db = new SQL(\"database\", \"username\", \"password\", {\n    dialect: \"sqlite\",\n    storage: \"./store.sqlite\",\n    operatorsAliases,\n    logging: false\n  });\n\n  const users = db.define(\"user\", {\n    id: {\n      type: SQL.INTEGER,\n      primaryKey: true,\n      autoIncrement: true\n    },\n    createdAt: SQL.DATE,\n    updatedAt: SQL.DATE,\n    email: SQL.STRING,\n    token: SQL.STRING\n  });\n\n  const trips = db.define(\"trip\", {\n    id: {\n      type: SQL.INTEGER,\n      primaryKey: true,\n      autoIncrement: true\n    },\n    createdAt: SQL.DATE,\n    updatedAt: SQL.DATE,\n    launchId: SQL.INTEGER,\n    userId: SQL.INTEGER\n  });\n\n  return { users, trips };\n};\n\nexport { createStore, paginateResults };\n","module.exports = require(\"apollo-datasource\");","module.exports = require(\"apollo-datasource-rest\");","module.exports = require(\"apollo-server\");","module.exports = require(\"isemail\");","module.exports = require(\"sequelize\");"],"sourceRoot":""}