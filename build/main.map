{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/index.js","webpack:///external \"apollo-server\""],"names":["books","title","author","typeDefs","gql","resolvers","Query","server","ApolloServer","listen","then","url","console","log"],"mappings":";;;QAAA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;;QAEA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;;;QAGA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA,0CAA0C,gCAAgC;QAC1E;QACA;;QAEA;QACA;QACA;QACA,wDAAwD,kBAAkB;QAC1E;QACA,iDAAiD,cAAc;QAC/D;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA,yCAAyC,iCAAiC;QAC1E,gHAAgH,mBAAmB,EAAE;QACrI;QACA;;QAEA;QACA;QACA;QACA,2BAA2B,0BAA0B,EAAE;QACvD,iCAAiC,eAAe;QAChD;QACA;QACA;;QAEA;QACA,sDAAsD,+DAA+D;;QAErH;QACA;;;QAGA;QACA;;;;;;;;;;;;;AClFA;AAAA;AAAA;CAEA;AACA;AACA;;AACA,MAAMA,KAAK,GAAG,CACZ;AACEC,OAAK,EAAE,yCADT;AAEEC,QAAM,EAAE;AAFV,CADY,EAKZ;AACED,OAAK,EAAE,eADT;AAEEC,QAAM,EAAE;AAFV,CALY,CAAd,C,CAWA;AACA;;AACA,MAAMC,QAAQ,GAAGC,iDAAI;;;;;;;;;;;;;;CAArB,C,CAgBA;AACA;;AACA,MAAMC,SAAS,GAAG;AAChBC,OAAK,EAAE;AACLN,SAAK,EAAE,MAAMA;AADR;AADS,CAAlB,C,CAMA;AACA;AACA;;AACA,MAAMO,MAAM,GAAG,IAAIC,0DAAJ,CAAiB;AAAEL,UAAF;AAAYE;AAAZ,CAAjB,CAAf,C,CAEA;AACA;;AACAE,MAAM,CAACE,MAAP,GAAgBC,IAAhB,CAAqB,CAAC;AAAEC;AAAF,CAAD,KAAa;AAChCC,SAAO,CAACC,GAAR,CAAa,uBAAsBF,GAAI,EAAvC;AACD,CAFD,E;;;;;;;;;;;;;;;;;;;;;;;ACjDA,0C","file":"main.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","import { ApolloServer, gql } from \"apollo-server\";\n\n// This is a (sample) collection of books we'll be able to query\n// the GraphQL server for.  A more complete example might fetch\n// from an existing data source like a REST API or database.\nconst books = [\n  {\n    title: \"Harry Potter and the Chamber of Secrets\",\n    author: \"J.K. Rowling\"\n  },\n  {\n    title: \"Jurassic Park\",\n    author: \"Michael Crichton\"\n  }\n];\n\n// Type definitions define the \"shape\" of your data and specify\n// which ways the data can be fetched from the GraphQL server.\nconst typeDefs = gql`\n  # Comments in GraphQL are defined with the hash (#) symbol.\n\n  # This \"Book\" type can be used in other type declarations.\n  type Book {\n    title: String\n    author: String\n  }\n\n  # The \"Query\" type is the root of all GraphQL queries.\n  # (A \"Mutation\" type will be covered later on.)\n  type Query {\n    books: [Book]\n  }\n`;\n\n// Resolvers define the technique for fetching the types in the\n// schema.  We'll retrieve books from the \"books\" array above.\nconst resolvers = {\n  Query: {\n    books: () => books\n  }\n};\n\n// In the most basic sense, the ApolloServer can be started\n// by passing type definitions (typeDefs) and the resolvers\n// responsible for fetching the data for those types.\nconst server = new ApolloServer({ typeDefs, resolvers });\n\n// This `listen` method launches a web-server.  Existing apps\n// can utilize middleware options, which we'll discuss later.\nserver.listen().then(({ url }) => {\n  console.log(`ðŸš€  Server ready at ${url}`);\n});\n","module.exports = require(\"apollo-server\");"],"sourceRoot":""}